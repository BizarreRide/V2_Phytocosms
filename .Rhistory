source("Analysis/V2_RequiredPackages.R")
source("Data/V2_LoadData.R")
full.frame <- full.frame[-11,]
soil <- full.frame[,c(12,14:18)]
colnames(soil)[2:3] <- c("carbon","Nitrogen")
bio <- full.frame[,8:12]
env <- full.frame[,c(8:12,14:18)]
groups <- full.frame[,1:7]
View(cmic2)
View(cmic)
with(cmic[(cmic$plant=="Wp"),], tapply(Cmic, list(soil,treat), mean))
b <- with(cmic[(cmic$plant=="Wp"),], tapply(Cmic, list(soil,treat), mean))[2,6]
a <- with(cmic[(cmic$plant=="Wp"),], tapply(Cmic, list(soil,treat), mean))[1,6]
b <- with(cmic[(cmic$plant=="Wp"),], tapply(Cmic, list(soil,treat), mean))[2,6]
rep(c(a,b), each=40)
a <- with(cmic[(cmic$plant=="Wp"),], tapply(Cmic, list(soil,treat), mean))[1,2]
b <- with(cmic[(cmic$plant=="Wp"),], tapply(Cmic, list(soil,treat), mean))[2,2]
cmic2$Cmic.control2 <- rep(c(a,b), each=40)
View(cmic2)
ggplot(cmic2, aes(x=treat, y=Cmic))
ggplot(cmic2, aes(x=treat, y=Cmic), labeller=label_parsed) +
geom_bar(fill="light blue", col="black", lwd=0.2, stat="identity") +
ylab(expression(paste("Âµg-C /g soil"))) +
xlab("Pseudo-Replicates") +
ggtitle(expression(paste("Microbial Biomass - Outlier search"))) +
facet_grid(soil~plant, labeller=label_parsed) +
mytheme
View(cmic2)
vegan::rda(phyto)
phyto <- cbind(bio, soil[,2:6])  # merge of bio and soil variables
vegan::rda(phyto)
phyto[is.na(phyto)] <- 0
phyto.pca <- vegan::rda(phyto)  #, scale=TRUE)
vegan::rda(phyto)
PCA(phyto)
phyto.pca$x[,1:2]
par(mfrow=c(1,2))
p <- length(res.pca$CA$eig)
par(mfrow=c(1,2))
p <- length(phyto.pca$CA$eig)
sit.sc1 <- scores(phyto.pca, display="wa", scaling=1, choices=c(1:p))
spe.sc1 <- scores(phyto.pca, display="sp", scaling=1, choices=c(1:p))
?scores()
names(phyto.pca)
names(phyto.pca$CA)
objects(phyto.pca)
?objects()
ls(phyto.pca)
methods(phyto.pca)
str(phyto.pca)
summary(phyto.pca)
ls.str(phyto.pca)
geAnywhere(biplot)
getAnywhere(biplot)
getAnywhere(biplot.pca)
methods(biplot)
getAnywhere(biplot.rda)
biplot(phyto.pca)
par(mfrow=c(1,1))
biplot(phyto.pca)
cleanplot.pca(phyto.pca)
cleanplot.pca(phyto.pca)
source("Analysis/cleanplot.pca.R")
source("Analysis/evplot.R")
cleanplot.pca(phyto.pca)
source("Analysis/V2_RequiredPackages.R") #packages agricolae and vegan are colliding
source("Data/V2_LoadData.R")
full.frame <- full.frame[-11,]
# Divide data frame in subsets ####
#%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
soil <- full.frame[,c(12,14:18)] # abiotic soil measures, including Cmic
colnames(soil)[2:3] <- c("carbon","Nitrogen")
bio <- full.frame[,8:12] # biotic soil characteristics
env <- full.frame[,c(8:12,14:18)]
groups <- full.frame[,1:7]
phyto <- cbind(bio, soil[,2:6])  # merge of bio and soil variables
phyto[is.na(phyto)] <- 0
phyto.pca <- vegan::rda(phyto)  #, scale=TRUE)
par(mfrow=c(1,1))
biplot(phyto.pca)
View(phyto)
phyto.pca <- vegan::rda(phyto, scale=TRUE)  #, scale=TRUE)
par(mfrow=c(1,1))
biplot(phyto.pca)
cleanplot.pca(phyto.pca)
source("Analysis/evplot.R")
source("Analysis/cleanplot.pca.R")
cleanplot.pca(phyto.pca)
biplot(phyto.pca)
pacircle(phyto.pca)
pcacircle(phyto.pca)
biplot(phyto.pca, scaling=1)
pcacircle(phyto.pca)
View(phyto)
tapply(phyto, range)
tapply(phyto$., range)
aggregate(phyto, range)
?aggregate
summary(phyto)
range(phyto)
?rnorm()
dune
data(varespec)
View(varespec)
rda(varespec)
vare-pca <- rda(varespec)
vare.pca <- rda(varespec)
biplot(vare.pca, scaling=1)
vare.pca <- rda(varespec, scale=TRUE)
biplot(vare.pca, scaling=1)
pcacircle(vare.pca)
cleanplot.pca(vare.pca)
require(FactoMineR)
PCA(varespec)
par(mfrow=c(1,1))
PCA(varespec)
cleanplot.pca(phyto.pca)
getAnywhere(biplot.rda)
phyto.ward <- hclust(dist(scale(phyto)), "ward")
phyto.ward <- hclust(dist(scale(phyto)), "ward.D")
gr <- cutree(phyto.ward, k=4)
gr <- cutree(phyto.ward, k=4)
grl <- levels(factor(gr))
plot(gr)
plot(phyto.ward)
gr <- cutree(phyto.ward, k=5)
grl <- levels(factor(gr))
sit.sc1 <- scores(phyto.pca, display="wa", scaling=1)
phyto.p1 <- plot(phyto.pca, display="wa", scaling=1, type="n", main="PCA correlation + clusters")
abline(v=0, lty="dotted")
abline(h=0, lty="dotted")
for(i in 1:length(grl)) {
points(sit.sc1[gr==i,], pch=(14+i), cex=2, col=i+1)
}
text(sit.sc1, row.names(phyto), cex=0.7, pos=3)
par(mfrow=c(1,1))
phyto.p1 <- plot(phyto.pca, display="wa", scaling=1, type="n", main="PCA correlation + clusters")
abline(v=0, lty="dotted")
abline(h=0, lty="dotted")
for(i in 1:length(grl)) {
points(sit.sc1[gr==i,], pch=(14+i), cex=2, col=i+1)
}
text(sit.sc1, row.names(phyto), cex=0.7, pos=3)
ordicluster(phyto.p1, phyto.ward, col="dark grey")
legend(locator(1), paste("Group", c(1:length(grl))), pch=14+c(1:length(grl)), col=14+c(1:length(grl)), pt.cex=2)
View(groups)
View(env)
str(groups)
groups$cosm <- factor(groups$cosm)
str(groups)
formulaRDA <- rda(phyo ~ ., groups[,-1])
formulaRDA <- rda(phyoto ~ ., groups[,-1])
formulaRDA <- rda(phyto ~ ., groups[,-1])
formulaRDA <- rda(phyto ~ ., groups[,-c(1,7)])
phyto.rda <- rda(phyto ~ ., groups[,-c(1,7)])
summary(spe.rda)
summary(phyto.rda)
coef(phyto.rda)
str(groups)
phyto.rda <- rda(phyto ~ ., groups[,-c(1,5,6,7)])
summary(phyto.rda)
coef(phyto.rda)
plot(phyto.rda, scaling=1, main="Triplot RDA")
phyto.sc <- scores(phyto.rda, choices=1:2, scaling=1, display="sp")
arrows(0,0, spe.sc[,1], spe.sc[,2], length=0, lty=1, col="red")
arrows(0,0, phyto.sc[,1], phyto.sc[,2], length=0, lty=1, col="red")
phyto.rda <- rda(phyto ~ ., scale=TRUE,groups[,-c(1,5,6,7)])
summary(phyto.rda)
coef(phyto.rda)
plot(phyto.rda, scaling=1, main="Triplot RDA")
phyto.sc <- scores(phyto.rda, choices=1:2, scaling=1, display="sp")
arrows(0,0, phyto.sc[,1], phyto.sc[,2], length=0, lty=1, col="red")
phyto.rda <- rda(phyto ~ ., scale=TRUE,groups[,-c(1,4,5,6,7)])
summary(phyto.rda)
phyto.rda <- rda(phyto ~ ., scale=TRUE,groups[,-c(1,5,6,7)])
summary(phyto.rda)
(R2 <- RsquaredAdj(phyto.rda)$r.squared)
(R2 <- RsquareAdj(phyto.rda)$r.squared)
(R2 <- RsquareAdj(phyto.rda)$adj.r.squared)
plot(phyto.rda, main="Correlation Triplot RDA")
phyto2.sc <- scores(phyto.rda, choices=1:2, display="sp")
arrows(0,0, phyto2.sc[,1], phyto2.sc[,2], length=0, lty=1, col="red")
save.image("D:/Quentin_Schorpp/Arbeitsprozess/git_repositories/V2_Phytocosms/.RData")
savehistory("D:/Quentin_Schorpp/Arbeitsprozess/git_repositories/V2_Phytocosms/.Rhistory")
